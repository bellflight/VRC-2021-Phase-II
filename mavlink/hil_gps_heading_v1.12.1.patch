diff --git a/src/modules/mavlink/mavlink_bridge_header.h b/src/modules/mavlink/mavlink_bridge_header.h
index e4811f5628..385afcae25 100644
--- a/src/modules/mavlink/mavlink_bridge_header.h
+++ b/src/modules/mavlink/mavlink_bridge_header.h
@@ -92,7 +92,7 @@ void mavlink_end_uart_send(mavlink_channel_t chan, int length);
 extern mavlink_status_t *mavlink_get_channel_status(uint8_t chan);
 extern mavlink_message_t *mavlink_get_channel_buffer(uint8_t chan);
 
-#include <v2.0/standard/mavlink.h>
+#include <v2.0/bell/mavlink.h>
 
 __END_DECLS
 
diff --git a/src/modules/mavlink/mavlink_messages.cpp b/src/modules/mavlink/mavlink_messages.cpp
index dbfd97cdaf..d8d2965923 100644
--- a/src/modules/mavlink/mavlink_messages.cpp
+++ b/src/modules/mavlink/mavlink_messages.cpp
@@ -52,6 +52,8 @@
 #include <px4_platform_common/time.h>
 #include <math.h>
 
+#include <v2.0/bell/mavlink.h>
+
 #include <uORB/Subscription.hpp>
 #include <uORB/SubscriptionMultiArray.hpp>
 #include <uORB/topics/vehicle_status.h>
diff --git a/src/modules/mavlink/mavlink_receiver.cpp b/src/modules/mavlink/mavlink_receiver.cpp
index adeeb8fa3a..ef02eb5f05 100644
--- a/src/modules/mavlink/mavlink_receiver.cpp
+++ b/src/modules/mavlink/mavlink_receiver.cpp
@@ -288,6 +288,10 @@ MavlinkReceiver::handle_message(mavlink_message_t *msg)
 		handle_message_gimbal_device_information(msg);
 		break;
 
+	case MAVLINK_MSG_ID_HIL_GPS_HEADING:
+		handle_message_hil_gps_heading(msg);
+		break;
+
 	default:
 		break;
 	}
@@ -322,7 +326,7 @@ MavlinkReceiver::handle_message(mavlink_message_t *msg)
 	}
 
 
-	if (_mavlink->get_hil_enabled() || (_mavlink->get_use_hil_gps() && msg->sysid == mavlink_system.sysid)) {
+	if (_mavlink->get_hil_enabled() || (_mavlink->get_use_hil_gps())) {
 		switch (msg->msgid) {
 		case MAVLINK_MSG_ID_HIL_GPS:
 			handle_message_hil_gps(msg);
@@ -2279,6 +2283,44 @@ MavlinkReceiver::handle_message_hil_gps(mavlink_message_t *msg)
 	_sensor_gps_pub.publish(gps);
 }
 
+void
+MavlinkReceiver::handle_message_hil_gps_heading(mavlink_message_t *msg)
+{
+	mavlink_hil_gps_heading_t gps;
+	mavlink_msg_hil_gps_heading_decode(msg, &gps);
+
+	const uint64_t timestamp = hrt_absolute_time();
+
+	struct vehicle_gps_position_s hil_gps = {};
+
+	hil_gps.timestamp_time_relative = 0;
+	hil_gps.time_utc_usec = gps.time_usec;
+
+	hil_gps.timestamp = timestamp;
+	hil_gps.lat = gps.lat;
+	hil_gps.lon = gps.lon;
+	hil_gps.alt = gps.alt;
+	hil_gps.eph = (float)gps.eph * 1e-2f; // from cm to m
+	hil_gps.epv = (float)gps.epv * 1e-2f; // from cm to m
+
+	hil_gps.s_variance_m_s = 0.1f;
+
+	hil_gps.vel_m_s = (float)gps.vel * 1e-2f; // from cm/s to m/s
+	hil_gps.vel_n_m_s = gps.vn * 1e-2f; // from cm to m
+	hil_gps.vel_e_m_s = gps.ve * 1e-2f; // from cm to m
+	hil_gps.vel_d_m_s = gps.vd * 1e-2f; // from cm to m
+	hil_gps.vel_ned_valid = true;
+	hil_gps.cog_rad = ((gps.cog == 65535) ? NAN : wrap_2pi(math::radians(gps.cog * 1e-2f)));
+
+	hil_gps.fix_type = gps.fix_type;
+	hil_gps.satellites_used = gps.satellites_visible;  //TODO: rename mavlink_hil_gps_t sats visible to used?
+
+	hil_gps.heading = ((gps.heading == 65535) ? NAN : wrap_2pi(math::radians(gps.heading * 1e-2f)));
+	hil_gps.heading_offset = 0;
+
+	_gps_pub.publish(hil_gps);
+}
+
 void
 MavlinkReceiver::handle_message_follow_target(mavlink_message_t *msg)
 {
@@ -3049,6 +3091,20 @@ MavlinkReceiver::run()
 							_mavlink->set_proto_version(2);
 						}
 
+						if (msg.msgid)
+						{
+							debug_key_value_s debug_topic{};
+
+							char test[10] = "mav_recv2";
+
+							debug_topic.timestamp = hrt_absolute_time();
+							memcpy(debug_topic.key, test, sizeof(debug_topic.key));
+							debug_topic.key[sizeof(debug_topic.key) - 1] = '\0'; // enforce null termination
+							debug_topic.value = float(msg.msgid);//pointer inside handle_msg
+
+							_debug_key_value_pub.publish(debug_topic);
+						}
+
 						/* handle generic messages and commands */
 						handle_message(&msg);
 
diff --git a/src/modules/mavlink/mavlink_receiver.h b/src/modules/mavlink/mavlink_receiver.h
index b76a2c1a7e..f4452bc8fa 100644
--- a/src/modules/mavlink/mavlink_receiver.h
+++ b/src/modules/mavlink/mavlink_receiver.h
@@ -111,6 +111,8 @@
 # include <uORB/topics/debug_vect.h>
 #endif // !CONSTRAINED_FLASH
 
+#include <v2.0/bell/mavlink_msg_hil_gps_heading.h>
+
 using namespace time_literals;
 
 class Mavlink;
@@ -160,6 +162,7 @@ private:
 	void handle_message_gps_rtcm_data(mavlink_message_t *msg);
 	void handle_message_heartbeat(mavlink_message_t *msg);
 	void handle_message_hil_gps(mavlink_message_t *msg);
+	void handle_message_hil_gps_heading(mavlink_message_t *msg);
 	void handle_message_hil_optical_flow(mavlink_message_t *msg);
 	void handle_message_hil_sensor(mavlink_message_t *msg);
 	void handle_message_hil_state_quaternion(mavlink_message_t *msg);
